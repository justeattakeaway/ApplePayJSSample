name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, dotnet-vnext ]

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]

    steps:

    - name: Checkout code
      uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3 # v4.0.0

    - name: Setup Node
      uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
      with:
        node-version: '20'

    - name: Build, Test and Publish
      shell: pwsh
      run: ./build.ps1
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: true
        DOTNET_NOLOGO: true
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
        DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: 1
        NUGET_XMLDOC_MODE: skip
        TERM: xterm

    - name: Publish screenshots
      uses: actions/upload-artifact@1746f4ab65b179e0ea60a494b83293b640dd5bba # v4.3.2
      if: ${{ always() }}
      with:
        name: screenshots-${{ matrix.os }}
        path: ./artifacts/screenshots/*.png
        if-no-files-found: ignore

    - name: Publish videos
      uses: actions/upload-artifact@1746f4ab65b179e0ea60a494b83293b640dd5bba # v4.3.2
      if: ${{ always() }}
      with:
        name: videos-${{ matrix.os }}
        path: ./artifacts/videos/*
        if-no-files-found: ignore
