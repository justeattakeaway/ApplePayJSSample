name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, dotnet-vnext ]

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]

    steps:

    - name: Checkout code
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@6bd8b7f7774af54e05809fcc5431931b3eb1ddee # v4.0.1

    - name: Setup Node
      uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
      with:
        node-version: '20'

    - name: Build, Test and Publish
      shell: pwsh
      run: ./build.ps1
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: true
        DOTNET_NOLOGO: true
        DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: 1
        NUGET_XMLDOC_MODE: skip
        TERM: xterm

    - name: Publish screenshots
      uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
      if: ${{ always() }}
      with:
        name: screenshots-${{ matrix.os }}
        path: ./artifacts/screenshots/*.png
        if-no-files-found: ignore

    - name: Publish videos
      uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
      if: ${{ always() }}
      with:
        name: videos-${{ matrix.os }}
        path: ./artifacts/videos/*
        if-no-files-found: ignore
